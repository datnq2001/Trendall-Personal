{"ast":null,"code":"//ShapeGroups.js\n// Import các loại shapes\nimport { shapes } from '../../Data/Shapes.js';\n\n// Function để chia nhóm shapes theo chữ cái đầu tiên\nfunction groupShapesByFirstLetter(shapes) {\n  const groups = {};\n  shapes.forEach(shape => {\n    const firstLetter = shape.charAt(0).toUpperCase(); // Chuyển chữ cái đầu tiên thành chữ hoa\n\n    if (!groups[firstLetter]) {\n      groups[firstLetter] = [];\n    }\n    groups[firstLetter].push(shape);\n  });\n\n  // Sắp xếp các nhóm theo thứ tự chữ cái\n  const sortedGroups = {};\n  Object.keys(groups).sort().forEach(key => {\n    sortedGroups[key] = groups[key];\n  });\n  return sortedGroups;\n}\n\n// Sử dụng function để nhóm các shapes theo chữ cái đầu tiên\nconst groupedShapes = groupShapesByFirstLetter(shapes);\n\n// Chuyển đổi object thành mảng các object để render\nconst items = Object.entries(groupedShapes).map(([letter, values]) => ({\n  letter,\n  values: values.map(value => ({\n    name: value,\n    url: `testSearch.asp?searchBy=Shape&txtValue=${value}&exact=true`\n  }))\n}));\n\n// Sử dụng mảng items để render trong BasicSearch component\nexport default items;","map":{"version":3,"names":["shapes","groupShapesByFirstLetter","groups","forEach","shape","firstLetter","charAt","toUpperCase","push","sortedGroups","Object","keys","sort","key","groupedShapes","items","entries","map","letter","values","value","name","url"],"sources":["/Users/datnq2001/Documents/Trendall-website/src/Components/BasicResearch/ShapeGroups.js"],"sourcesContent":["//ShapeGroups.js\n// Import các loại shapes\nimport { shapes } from '../../Data/Shapes.js';\n\n// Function để chia nhóm shapes theo chữ cái đầu tiên\nfunction groupShapesByFirstLetter(shapes) {\n  const groups = {};\n  \n  shapes.forEach(shape => {\n    const firstLetter = shape.charAt(0).toUpperCase(); // Chuyển chữ cái đầu tiên thành chữ hoa\n\n    if (!groups[firstLetter]) {\n      groups[firstLetter] = [];\n    }\n    \n    groups[firstLetter].push(shape);\n  });\n\n  // Sắp xếp các nhóm theo thứ tự chữ cái\n  const sortedGroups = {};\n  Object.keys(groups).sort().forEach(key => {\n    sortedGroups[key] = groups[key];\n  });\n\n  return sortedGroups;\n}\n\n// Sử dụng function để nhóm các shapes theo chữ cái đầu tiên\nconst groupedShapes = groupShapesByFirstLetter(shapes);\n\n// Chuyển đổi object thành mảng các object để render\nconst items = Object.entries(groupedShapes).map(([letter, values]) => ({\n  letter,\n  values: values.map(value => ({\n    name: value,\n    url: `testSearch.asp?searchBy=Shape&txtValue=${value}&exact=true`\n  }))\n}));\n\n// Sử dụng mảng items để render trong BasicSearch component\nexport default items;\n"],"mappings":"AAAA;AACA;AACA,SAASA,MAAM,QAAQ,sBAAsB;;AAE7C;AACA,SAASC,wBAAwBA,CAACD,MAAM,EAAE;EACxC,MAAME,MAAM,GAAG,CAAC,CAAC;EAEjBF,MAAM,CAACG,OAAO,CAACC,KAAK,IAAI;IACtB,MAAMC,WAAW,GAAGD,KAAK,CAACE,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC,CAAC;;IAEnD,IAAI,CAACL,MAAM,CAACG,WAAW,CAAC,EAAE;MACxBH,MAAM,CAACG,WAAW,CAAC,GAAG,EAAE;IAC1B;IAEAH,MAAM,CAACG,WAAW,CAAC,CAACG,IAAI,CAACJ,KAAK,CAAC;EACjC,CAAC,CAAC;;EAEF;EACA,MAAMK,YAAY,GAAG,CAAC,CAAC;EACvBC,MAAM,CAACC,IAAI,CAACT,MAAM,CAAC,CAACU,IAAI,CAAC,CAAC,CAACT,OAAO,CAACU,GAAG,IAAI;IACxCJ,YAAY,CAACI,GAAG,CAAC,GAAGX,MAAM,CAACW,GAAG,CAAC;EACjC,CAAC,CAAC;EAEF,OAAOJ,YAAY;AACrB;;AAEA;AACA,MAAMK,aAAa,GAAGb,wBAAwB,CAACD,MAAM,CAAC;;AAEtD;AACA,MAAMe,KAAK,GAAGL,MAAM,CAACM,OAAO,CAACF,aAAa,CAAC,CAACG,GAAG,CAAC,CAAC,CAACC,MAAM,EAAEC,MAAM,CAAC,MAAM;EACrED,MAAM;EACNC,MAAM,EAAEA,MAAM,CAACF,GAAG,CAACG,KAAK,KAAK;IAC3BC,IAAI,EAAED,KAAK;IACXE,GAAG,EAAG,0CAAyCF,KAAM;EACvD,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC;;AAEH;AACA,eAAeL,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}