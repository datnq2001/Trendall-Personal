{"ast":null,"code":"var _jsxFileName = \"/Users/datnq2001/Documents/Trendall-website/src/Page Container/TraditionalSearch/InventoryTerms.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setSelectedInventory } from '../../Redux/actions';\n\n// Import inventory data\nimport { inventory } from '../../Data/Inventory';\n\n// Component for displaying inventory terms\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InventoryTerms() {\n  _s();\n  // Redux hooks for dispatch and selector\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  // Correct path to selectedInventory in Redux store\n  const selectedInventory = useSelector(state => state.search.selectedInventory);\n\n  // Effect hook to log selected inventory changes\n  useEffect(() => {\n    console.log(selectedInventory);\n  }, [selectedInventory]); // Include selectedInventory in the dependency array to track changes\n\n  // Function to handle inventory click\n  function handleInventoryClick(inventory) {\n    // Dispatch action to set selected inventory\n    dispatch(setSelectedInventory(inventory));\n    // Navigate to traditional search page\n    navigate('/traditional-search');\n  }\n\n  // Render the component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Inventory Terms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), inventory.map((inventoryTerm, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleInventoryClick(inventoryTerm),\n      children: inventoryTerm\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(InventoryTerms, \"x5b9l58pyxJibVTCylsQKVQMNEk=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n_c = InventoryTerms;\nexport default InventoryTerms;\nvar _c;\n$RefreshReg$(_c, \"InventoryTerms\");","map":{"version":3,"names":["React","useEffect","useNavigate","useDispatch","useSelector","setSelectedInventory","inventory","jsxDEV","_jsxDEV","InventoryTerms","_s","dispatch","navigate","selectedInventory","state","search","console","log","handleInventoryClick","children","fileName","_jsxFileName","lineNumber","columnNumber","map","inventoryTerm","index","onClick","_c","$RefreshReg$"],"sources":["/Users/datnq2001/Documents/Trendall-website/src/Page Container/TraditionalSearch/InventoryTerms.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setSelectedInventory } from '../../Redux/actions';\n\n// Import inventory data\nimport { inventory } from '../../Data/Inventory';\n\n// Component for displaying inventory terms\nfunction InventoryTerms() {\n    // Redux hooks for dispatch and selector\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    // Correct path to selectedInventory in Redux store\n    const selectedInventory = useSelector(state => state.search.selectedInventory);\n\n    // Effect hook to log selected inventory changes\n    useEffect(() => {\n        console.log(selectedInventory);\n    }, [selectedInventory]); // Include selectedInventory in the dependency array to track changes\n\n    // Function to handle inventory click\n    function handleInventoryClick(inventory) {\n        // Dispatch action to set selected inventory\n        dispatch(setSelectedInventory(inventory));\n        // Navigate to traditional search page\n        navigate('/traditional-search');\n    }\n\n    // Render the component\n    return (\n        <div>\n            <h1>Inventory Terms</h1>\n            {/* Map through inventory array to display buttons */}\n            {inventory.map((inventoryTerm, index) => (\n                <button key={index} onClick={() => handleInventoryClick(inventoryTerm)}>\n                    {inventoryTerm}\n                </button>\n            ))}\n        </div>\n    );\n}\n\nexport default InventoryTerms;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,oBAAoB,QAAQ,qBAAqB;;AAE1D;AACA,SAASC,SAAS,QAAQ,sBAAsB;;AAEhD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACtB;EACA,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B;EACA,MAAMW,iBAAiB,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,MAAM,CAACF,iBAAiB,CAAC;;EAE9E;EACAZ,SAAS,CAAC,MAAM;IACZe,OAAO,CAACC,GAAG,CAACJ,iBAAiB,CAAC;EAClC,CAAC,EAAE,CAACA,iBAAiB,CAAC,CAAC,CAAC,CAAC;;EAEzB;EACA,SAASK,oBAAoBA,CAACZ,SAAS,EAAE;IACrC;IACAK,QAAQ,CAACN,oBAAoB,CAACC,SAAS,CAAC,CAAC;IACzC;IACAM,QAAQ,CAAC,qBAAqB,CAAC;EACnC;;EAEA;EACA,oBACIJ,OAAA;IAAAW,QAAA,gBACIX,OAAA;MAAAW,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEvBjB,SAAS,CAACkB,GAAG,CAAC,CAACC,aAAa,EAAEC,KAAK,kBAChClB,OAAA;MAAoBmB,OAAO,EAAEA,CAAA,KAAMT,oBAAoB,CAACO,aAAa,CAAE;MAAAN,QAAA,EAClEM;IAAa,GADLC,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CACX,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACb,EAAA,CAhCQD,cAAc;EAAA,QAEFN,WAAW,EACXD,WAAW,EAEFE,WAAW;AAAA;AAAAwB,EAAA,GALhCnB,cAAc;AAkCvB,eAAeA,cAAc;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}